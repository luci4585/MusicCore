// <auto-generated />
using System;
using Backend.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(MusicCoreContext))]
    [Migration("20250916205017_AjustesdeId")]
    partial class AjustesdeId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Service.Models.Artista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Artistas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Nombre = "The Beatles"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Nombre = "Michael Jackson"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Nombre = "Madonna"
                        });
                });

            modelBuilder.Entity("Service.Models.Cancion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiscoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Duracion")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DiscoId");

                    b.ToTable("Canciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscoId = 1,
                            Duracion = 4.20m,
                            IsDeleted = false,
                            Titulo = "Come Together"
                        },
                        new
                        {
                            Id = 2,
                            DiscoId = 2,
                            Duracion = 4.54m,
                            IsDeleted = false,
                            Titulo = "Billie Jean"
                        },
                        new
                        {
                            Id = 3,
                            DiscoId = 3,
                            Duracion = 4.00m,
                            IsDeleted = false,
                            Titulo = "Material Girl"
                        });
                });

            modelBuilder.Entity("Service.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "perezJuan@gmail.com",
                            IsDeleted = false,
                            Nombre = "Juan Perez"
                        },
                        new
                        {
                            Id = 2,
                            Email = "gomezMaria@gmail.com",
                            IsDeleted = false,
                            Nombre = "Maria Gomez"
                        },
                        new
                        {
                            Id = 3,
                            Email = "sanchezCarlos@gmail.com",
                            IsDeleted = false,
                            Nombre = "Carlos Sanchez"
                        });
                });

            modelBuilder.Entity("Service.Models.Disco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistaId")
                        .HasColumnType("int");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ArtistaId");

                    b.HasIndex("GeneroId");

                    b.ToTable("Discos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistaId = 1,
                            GeneroId = 1,
                            IsDeleted = false,
                            Titulo = "Abbey Road"
                        },
                        new
                        {
                            Id = 2,
                            ArtistaId = 2,
                            GeneroId = 2,
                            IsDeleted = false,
                            Titulo = "Thriller"
                        },
                        new
                        {
                            Id = 3,
                            ArtistaId = 3,
                            GeneroId = 2,
                            IsDeleted = false,
                            Titulo = "Like a Virgin"
                        });
                });

            modelBuilder.Entity("Service.Models.DiscoVenta", b =>
                {
                    b.Property<int>("VentaId")
                        .HasColumnType("int");

                    b.Property<int>("DiscoId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("VentaId", "DiscoId");

                    b.HasIndex("DiscoId");

                    b.ToTable("DiscoVenta");
                });

            modelBuilder.Entity("Service.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Nombre = "Rock"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Nombre = "Pop"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Nombre = "Jazz"
                        });
                });

            modelBuilder.Entity("Service.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Service.Models.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Ventas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 1,
                            ClienteId = 1,
                            Fecha = new DateTime(2025, 9, 16, 17, 50, 14, 568, DateTimeKind.Local).AddTicks(1662),
                            IsDeleted = false,
                            Precio = 95000m
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 2,
                            ClienteId = 2,
                            Fecha = new DateTime(2025, 9, 16, 17, 50, 14, 568, DateTimeKind.Local).AddTicks(1683),
                            IsDeleted = false,
                            Precio = 70000m
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 1,
                            ClienteId = 3,
                            Fecha = new DateTime(2025, 9, 16, 17, 50, 14, 568, DateTimeKind.Local).AddTicks(1686),
                            IsDeleted = false,
                            Precio = 80000m
                        });
                });

            modelBuilder.Entity("Service.Models.Cancion", b =>
                {
                    b.HasOne("Service.Models.Disco", "Disco")
                        .WithMany("Canciones")
                        .HasForeignKey("DiscoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disco");
                });

            modelBuilder.Entity("Service.Models.Disco", b =>
                {
                    b.HasOne("Service.Models.Artista", "Artista")
                        .WithMany()
                        .HasForeignKey("ArtistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artista");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("Service.Models.DiscoVenta", b =>
                {
                    b.HasOne("Service.Models.Disco", "Disco")
                        .WithMany("DiscoVentas")
                        .HasForeignKey("DiscoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.Venta", "Venta")
                        .WithMany("DiscoVentas")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disco");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Service.Models.Venta", b =>
                {
                    b.HasOne("Service.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Service.Models.Disco", b =>
                {
                    b.Navigation("Canciones");

                    b.Navigation("DiscoVentas");
                });

            modelBuilder.Entity("Service.Models.Venta", b =>
                {
                    b.Navigation("DiscoVentas");
                });
#pragma warning restore 612, 618
        }
    }
}
